<controls:MetroWindow x:Class="MySnooper.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:loc="clr-namespace:MySnooper"
        xmlns:loc2="clr-namespace:MySnooper.CustomUIThings"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        Title="Great Snooper" Height="600" Width="1024" WindowStartupLocation="CenterScreen"
        Closing="My_WormNet_Closing" Activated="WindowActivated"
        WindowState="Maximized" TitlebarHeight="40" ContentRendered="MainWindow_Loaded" WindowTransitionsEnabled="False"
        BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1" ShowIconOnTitleBar="False" Background="#111111">
    <!-- Shortcut keys -->
    <controls:MetroWindow.CommandBindings>
        <CommandBinding Command="{x:Static loc:MainWindow.NextChannelCommand}" Executed="NextChannel" CanExecute="CanExecuteCustomCommand" />
        <CommandBinding Command="{x:Static loc:MainWindow.PrevChannelCommand}" Executed="PrevChannel" CanExecute="CanExecuteCustomCommand" />
        <CommandBinding Command="{x:Static loc:MainWindow.CloseChannelCommand}" Executed="CloseChannel" CanExecute="CanExecuteCustomCommand" />
        <CommandBinding Command="{x:Static loc:MainWindow.FilterCommand}" Executed="FilterShortcut" CanExecute="CanExecuteCustomCommand" />
        <CommandBinding Command="{x:Static loc:MainWindow.DoubleClickCommand}" Executed="NotifyIconDoubleClick" CanExecute="CanExecuteCustomCommand" />
    </controls:MetroWindow.CommandBindings>
    <controls:MetroWindow.InputBindings>
        <KeyBinding Command="{x:Static loc:MainWindow.NextChannelCommand}" Key="Right" Modifiers="Alt" />
        <KeyBinding Command="{x:Static loc:MainWindow.PrevChannelCommand}" Key="Left" Modifiers="Alt" />
        <KeyBinding Command="{x:Static loc:MainWindow.CloseChannelCommand}" Key="W" Modifiers="Control" />
        <KeyBinding Command="{x:Static loc:MainWindow.FilterCommand}" Key="F" Modifiers="Control" />
    </controls:MetroWindow.InputBindings>

    <!-- Application Icon -->
    <controls:MetroWindow.IconTemplate>
        <DataTemplate>
            <Image Source="Resources/Icon.png" Margin="5" />
        </DataTemplate>
    </controls:MetroWindow.IconTemplate>
    
    <!-- Application Title -->
    <controls:MetroWindow.TitleTemplate>
        <DataTemplate></DataTemplate>
    </controls:MetroWindow.TitleTemplate>
    
    <!-- Left buttons in the header -->
    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands>
            <Menu Background="Transparent" Height="40">
                <MenuItem Style="{StaticResource MenuItemStyle}">
                    <MenuItem.Icon>
                        <Image Name="HeaderIcon" Source="Resources/icon.png" Width="25" Margin="5,0,0,0" />
                    </MenuItem.Icon>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Name="WelcomeText" VerticalAlignment="Center" FontSize="16" Foreground="AliceBlue" Margin="10,-2,0,0" />
                            <Image Source="Resources/down.png" Width="25" Margin="3,0,5,0" />
                        </StackPanel>
                    </MenuItem.Header>
                    <MenuItem Header="Ignore list" Click="BanListClicked">
                        <MenuItem.Icon>
                            <Image Source="Resources/banned.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Message logs" Click="OpenLogs">
                        <MenuItem.Icon>
                            <Image Source="Resources/log.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Show news" Click="OpenNews">
                        <MenuItem.Icon>
                            <Image Source="Resources/newsIcon.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Settings" Click="SettingsClicked">
                        <MenuItem.Icon>
                            <Image Source="Resources/settings.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Log out" Click="LogoutClicked">
                        <MenuItem.Icon>
                            <Image Source="Resources/logout.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Exit" Click="ExitClicked">
                        <MenuItem.Icon>
                            <Image Source="Resources/close.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>

            <Menu Background="Transparent" Height="40">
                <MenuItem Style="{StaticResource MenuItemStyle}">
                    <MenuItem.Icon>
                        <Image Source="Resources/tuslogo.png" Width="25" Margin="8,0,0,0" />
                    </MenuItem.Icon>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="The Ultimate Site" VerticalAlignment="Center" FontSize="16" Foreground="AliceBlue" Margin="10,-2,0,0" />
                            <Image Source="Resources/down.png" Width="25" Margin="3,0,5,0" />
                        </StackPanel>
                    </MenuItem.Header>
                    <MenuItem Header="Home page" Click="OpenURL" Tag="http://www.tus-wa.com">
                        <MenuItem.Icon>
                            <Image Source="Resources/tushome.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Analyzer" Click="OpenURL" Tag="http://www.tus-wa.com/leagues/analyzer/">
                        <MenuItem.Icon>
                            <Image Source="Resources/tusanalizer.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Report page" Click="OpenURL" Tag="http://www.tus-wa.com/leagues/report/">
                        <MenuItem.Icon>
                            <Image Source="Resources/tusreport.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Complaints forum" Click="OpenURL" Tag="http://www.tus-wa.com/forums/leagues-complaints/">
                        <MenuItem.Icon>
                            <Image Source="Resources/tuscomplaints.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Recent games" Click="OpenURL" Tag="http://www.tus-wa.com/leagues/recent-games/">
                        <MenuItem.Icon>
                            <Image Source="Resources/tusrecent.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Standings" Click="OpenURL" Tag="http://www.tus-wa.com/leagues/classic-standings/">
                        <MenuItem.Icon>
                            <Image Source="Resources/tusstandings.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Cups" Click="OpenURL" Tag="http://www.tus-wa.com/cups/">
                        <MenuItem.Icon>
                            <Image Source="Resources/tuscup.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Tournaments" Click="OpenURL" Tag="http://www.tus-wa.com/tournaments/">
                        <MenuItem.Icon>
                            <Image Source="Resources/tustournaments.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Private messages" Click="OpenURL" Tag="http://www.tus-wa.com/pm/">
                        <MenuItem.Icon>
                            <Image Source="Resources/tuspm.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Great Snooper topic" Click="OpenURL" Tag="http://www.tus-wa.com/forums/files/great-snooper-3rd-chapter-25137/">
                        <MenuItem.Icon>
                            <Image Source="Resources/gstopic.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>


            <!-- Away / Online icon -->
            <Button Click="AwayManager" Loaded="AwayOnOffLoaded" ToolTip="Mark as away / online" ToolTipService.Placement="Bottom" Focusable="False">
                <Image Source="Resources/online.png" Width="24" Height="24"></Image>
            </Button>
            <!-- Chat mode on / off icon -->
            <Button Click="ChatModeOnOffClick" Loaded="ChatModeOnOffLoaded" ToolTip="Chat mode on / off" ToolTipService.Placement="Bottom" Focusable="False">
                <Image Source="Resources/chatmodeoff.png" Width="24" Height="24"></Image>
            </Button>
            <!-- League game searcher -->
            <Button Click="LeagueSearcher" Loaded="LeagueSearcherLoaded" ToolTip="Search for league game" ToolTipService.Placement="Bottom" Focusable="False">
                <Image Source="Resources/search.png" Width="24" Height="24"></Image>
            </Button>
            <!-- Notificator -->
            <Button Click="NotificatorOpen" Loaded="NotificatorOnOffLoaded" ToolTip="Notificator" ToolTipService.Placement="Bottom" Focusable="False">
                <Image Source="Resources/notificator.png" Width="24" Height="24"></Image>
            </Button>
            <!-- Sound on / off icon -->
            <Button Click="SoundOnOffClick" Loaded="SoundOnOffLoaded" ToolTip="Sounds on / off" ToolTipService.Placement="Bottom" Focusable="False">
                <Image Source="Resources/sound.png" Width="24" Height="24"></Image>
            </Button>

            <loc2:SliderWithDraggingEvents Loaded="VolumeSliderLoaded" ToolTipService.Placement="Bottom" ToolTip="Volume" Maximum="100" SmallChange="1" LargeChange="10" Value="100" Width="100" VerticalAlignment="Center" Focusable="False" Margin="8" ValueChanged="SliderValueChanged" ThumbDragStarted="SliderChangeWithThumb" ThumbDragCompleted="VolumeChanged" />
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>
    
    <controls:MetroWindow.Resources>
        <Style BasedOn="{StaticResource MetroTabItem}" TargetType="{x:Type TabItem}">
            <Setter Property="controls:ControlsHelper.HeaderFontSize" Value="18"></Setter>
        </Style>

        <Style TargetType="{x:Type controls:WindowCommands}">
            <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="VerticalAlignment"
                Value="Center" />
            <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:WindowCommands">
                        <ControlTemplate.Resources>
                            <ResourceDictionary>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background"
                                        Value="{DynamicResource TransparentWhiteBrush}" />
                                    <Setter Property="HorizontalContentAlignment"
                                        Value="Center" />
                                    <Setter Property="VerticalContentAlignment"
                                        Value="Center" />
                                    <Setter Property="Padding"
                                        Value="1" />
                                    <Setter Property="Focusable"
                                        Value="False" />
                                    <Setter Property="FocusVisualStyle"
                                        Value="{x:Null}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <ContentPresenter x:Name="contentPresenter"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  RecognizesAccessKey="True"
                                                                  Opacity="0.75"
                                                                  Margin="9,1,9,1" />

                                                    <Rectangle x:Name="border"
                                                           SnapsToDevicePixels="True"
                                                           IsHitTestVisible="False"
                                                           Opacity="0.25"
                                                           Width="1"
                                                           Height="15"
                                                           VerticalAlignment="Stretch"
                                                           HorizontalAlignment="Right"
                                                           Fill="{TemplateBinding Foreground}"
                                                           Margin="8,0,0,0" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                        <Setter TargetName="contentPresenter"
                                                            Property="Opacity"
                                                            Value="1" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver"
                                                         Value="False">
                                                        <Setter TargetName="contentPresenter"
                                                            Property="Opacity"
                                                            Value=".75" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                                                         Value="false">
                                                        <Setter Property="Foreground"
                                                            Value="#ADADAD" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ShowTitleBar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                                                 Value="True">
                                            <Setter Property="Foreground"
                                                Value="White" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ResourceDictionary>
                        </ControlTemplate.Resources>

                        <ItemsControl IsTabStop="False"
                                  Height="{Binding TitlebarHeight, RelativeSource={RelativeSource AncestorType=controls:MetroWindow}}"
                                  ItemsSource="{Binding Items, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:WindowCommands}}}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ShowTitleBar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                         Value="True">
                    <Setter Property="Foreground"
                        Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ShowTitleBar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                         Value="False">
                    <Setter Property="Background"
                        Value="Transparent" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="DescriptionStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"></Setter>
            <Setter Property="TextAlignment" Value="Center"></Setter>
            <Setter Property="HorizontalAlignment" Value="Center"></Setter>
            <Setter Property="VerticalAlignment" Value="Center"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Padding" Value="0,6"></Setter>
        </Style>
    </controls:MetroWindow.Resources>
    
    <!-- Content -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100*" MinWidth="100" Name="LeftColumn"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="40*" MinWidth="100" Name="RightColumn"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <tb:TaskbarIcon x:Name="myNotifyIcon" ToolTipText="Great Snooper" IconSource="Resources/icon.ico" DoubleClickCommand="{x:Static loc:MainWindow.DoubleClickCommand}">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Show snooper" Click="ShowSnooper">
                        <MenuItem.Icon>
                            <Image Source="Resources/tushome.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Message logs" Click="OpenLogs">
                        <MenuItem.Icon>
                            <Image Source="Resources/log.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Settings" Click="SettingsClicked">
                        <MenuItem.Icon>
                            <Image Source="Resources/settings.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Log out" Click="LogoutClicked">
                        <MenuItem.Icon>
                            <Image Source="Resources/logout.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Exit" Click="ExitClicked">
                        <MenuItem.Icon>
                            <Image Source="Resources/close.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>

        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="40*" MinHeight="50" Name="GameListGridRow"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="100*" MinHeight="50" Name="ChannelsGridRow"></RowDefinition>
            </Grid.RowDefinitions>

            <!-- Game list -->
            <TabControl Name="GameList" Grid.Row="0" Padding="0" BorderThickness="0" SelectionChanged="NoSelectionChange">
                <TabControl.Style>
                    <Style TargetType="{x:Type TabControl}">
                        <Setter Property="Background"
                Value="{x:Null}" />
                        <Setter Property="BorderBrush"
                Value="{x:Null}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabControl}">
                                    <Border x:Name="ContentPanel"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                                ContentSource="SelectedContent"
                                                Margin="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Style>
                <TabControl.Resources>
                    <Style x:Key="ListBoxItemStyle"
           TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
                        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
                        <Setter Property="VerticalContentAlignment"
                Value="Center" />
                        <Setter Property="MinHeight"
                Value="0" />
                        <Setter Property="Margin"
                Value="0" />
                        <Setter Property="Height" Value="20" />
                        <Setter Property="SnapsToDevicePixels"
                Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <ContentPresenter Margin="5, 0, 0, 0"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected"
                                 Value="True">
                                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush2}" />
                                            <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver"
                                 Value="True">
                                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush3}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled"
                                 Value="False">
                                            <Setter Property="Foreground"
                                    Value="{DynamicResource GrayBrush7}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsEnabled"
                                           Value="False" />
                                                <Condition Property="IsSelected"
                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource GrayBrush7}" />
                                            <Setter Property="Foreground"
                                    Value="{DynamicResource AccentSelectedColorBrush}" />
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected"
                                           Value="True" />
                                                <Condition Property="Selector.IsSelectionActive"
                                           Value="True" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource AccentColorBrush2}" />
                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
            </TabControl>

            
            <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Focusable="False" ResizeBehavior="PreviousAndNext" Height="3" Background="Black" DragCompleted="LayoutChanged" />


            <!-- The tabcontrol to list channels and messages -->
            <TabControl Name="Channels" Grid.Row="2" SelectionChanged="ChannelChanged" Background="Transparent">
                <TabControl.Resources>
                    <!-- controlss://github.com/MahApps/MahApps.Metro/blob/master/MahApps.Metro/Styles/Controls.TabControl.xaml -->
                    <Style x:Key="ChannelTabItem" TargetType="TabItem">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="Padding" Value="6,2,6,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="MinWidth" Value="5" />
                        <Setter Property="MinHeight" Value="5" />
                        <Setter Property="FontWeight" Value="Normal" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{DynamicResource GrayNormalBrush}" />
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="FontSize" Value="15" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border x:Name="Border" HorizontalAlignment="Stretch"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                                            <ContentPresenter x:Name="ContentSite"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.FontSize="{TemplateBinding FontSize}"
                                              TextElement.FontStretch="{TemplateBinding controls:ControlsHelper.HeaderFontStretch}"
                                              TextElement.FontWeight="{TemplateBinding FontWeight}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True" />
                                        </StackPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding NewMessages}" Value="true">
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </DataTrigger>
                                        <Trigger Property="IsMouseOver" Value="true" SourceName="ContentSite">
                                            <Setter Property="Foreground" Value="{DynamicResource GrayHoverBrush}"></Setter>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}"></Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="PrivMsgTabItem" TargetType="TabItem" BasedOn="{StaticResource ChannelTabItem}">
                        <Setter Property="Foreground" Value="Green" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border x:Name="Border" HorizontalAlignment="Stretch"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" MouseDown="ChannelMBClick">
                                        <Border.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Close" Click="PrivateChatClose"></MenuItem>
                                            </ContextMenu>
                                        </Border.ContextMenu>
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                                            <TextBlock x:Name="ContentSite"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              FontSize="{TemplateBinding FontSize}"
                                              FontStretch="{TemplateBinding controls:ControlsHelper.HeaderFontStretch}"
                                              FontWeight="{TemplateBinding FontWeight}"
                                              Foreground="{TemplateBinding Foreground}" />
                                        </StackPanel>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
            </TabControl>
        </Grid>

        <GridSplitter Grid.Column="1" Background="Black" Width="4" Focusable="False" ResizeBehavior="PreviousAndNext" DragCompleted="LayoutChanged2"></GridSplitter>

        <!-- User list, filter, news -->
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="5"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <!-- User list -->
            <TabControl Name="UserList" Grid.Row="0" SelectionChanged="NoSelectionChange" Padding="0" BorderThickness="0">
                <TabControl.Style>
                    <Style TargetType="{x:Type TabControl}">
                        <Setter Property="Background"
                Value="{x:Null}" />
                        <Setter Property="BorderBrush"
                Value="{x:Null}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TabControl}">
                                    <Border x:Name="ContentPanel"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                                ContentSource="SelectedContent"
                                                Margin="{TemplateBinding Padding}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Style>
                <TabControl.Resources>
                    <Style x:Key="DataGridRowStyle" TargetType="DataGridRow">
                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="Background" Value="{Binding Path=Group.GroupColor}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsBanned, Mode=OneWay}" Value="True">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="Maroon" Opacity="0.6"></SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}" />
                                <Setter Property="Foreground" Value="{DynamicResource AccentSelectedColorBrush}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                    <Condition Binding="{Binding Path=SelectionUnit, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Value="FullRow" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush3}" />
                            </MultiDataTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" Value="{DynamicResource AccentColorBrush2}" />
                            </MultiTrigger>
                        </Style.Triggers>
                    </Style>

                    <!-- controlss://github.com/MahApps/MahApps.Metro/blob/master/MahApps.Metro/Styles/Controls.DataGrid.xaml -->
                    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="MinWidth" Value="0" />
                        <Setter Property="MinHeight" Value="25" />
                        <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Padding" Value="10,8,4,10" />
                        <Setter Property="Margin" Value="0,0,0,0" />
                        <Setter Property="BorderBrush" Value="{DynamicResource GrayBrush5}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="BackgroundBorder" BorderThickness="0,0,0,1"
                                            Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="Gray" />

                                        <ContentPresenter x:Name="HeaderContent"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                        <Path x:Name="SortArrow" Visibility="Collapsed" Stretch="Fill"  Grid.Column="1" Width="8"
                                            Height="10" Margin="0,0,8,2" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Fill="{DynamicResource GrayBrush2}" />

                                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" HorizontalContentAlignment="Left"
                                           Background="Gray" Style="{StaticResource MetroColumnHeaderGripperStyle}" />

                                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" HorizontalContentAlignment="Right"
                                           Background="Gray" Style="{StaticResource MetroColumnHeaderGripperStyle}" Grid.Column="1" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="SortDirection" Value="{x:Null}">
                                            <Setter TargetName="BackgroundBorder" Property="Background" Value="Transparent" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True" />
                                                <Condition Property="SortDirection" Value="{x:Null}" />
                                            </MultiTrigger.Conditions>
                                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource GrayBrush8}" />
                                        </MultiTrigger>
                                        <Trigger Property="SortDirection" Value="Ascending">
                                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="SortArrow" Property="Data" Value="F1 M 34,57L 42,57L 42,32.25L 52,42.25L 52,31.75L 38,17.75L 24,31.75L 24,42.25L 34,32.25L 34,57 Z " />
                                        </Trigger>
                                        <Trigger Property="SortDirection" Value="Descending">
                                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="SortArrow" Property="Data" Value="F1 M 42,19.0002L 34,19.0002L 34,43.7502L 24,33.7502L 24,44.2502L 38,58.2502L 52,44.2502L 52,33.7502L 42,43.7502L 42,19.0002 Z " />
                                            <Setter TargetName="SortArrow" Property="Margin" Value="0,0,8,0" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ContentTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock TextBlock.FontWeight="SemiBold" Text="{Binding Converter={StaticResource ToUpperConverter}}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
            </TabControl>

            <!-- Filter -->
            <TextBox Name="Filter" Grid.Row="2" Text="Filter.." GotKeyboardFocus="FilterEntered"
                        LostKeyboardFocus="FilterLeft" KeyUp="Filtering" Margin="0,8,5,7" Background="Transparent" />
        </Grid>
    </Grid>
</controls:MetroWindow>
