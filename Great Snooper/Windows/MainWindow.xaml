<controls:MetroWindow x:Class="GreatSnooper.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:c="clr-namespace:GreatSnooper.Converters"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:l="clr-namespace:GreatSnooper.Localizations"
        xmlns:u="clr-namespace:GreatSnooper.UserControls"
        xmlns:ui="clr-namespace:GreatSnooper.CustomUI"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras"
        Title="Great Snooper" Height="600" Width="1024" Style="{StaticResource MyDialogWindow}"
        BorderBrush="{DynamicResource AccentColorBrush}" ResizeMode="CanResize"
        BorderThickness="1" ShowIconOnTitleBar="False" ShowInTaskbar="True" Background="#111111" WindowStartupLocation="CenterScreen">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Activated">
            <cmd:EventToCommand Command="{Binding Path=WindowActivatedCommand, Mode=OneTime}" PassEventArgsToCommand="False" />
        </i:EventTrigger>
        <i:EventTrigger EventName="StateChanged">
            <cmd:EventToCommand Command="{Binding Path=WindowStateChangedCommand, Mode=OneTime}" PassEventArgsToCommand="False" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <controls:MetroWindow.Resources>
        <ContextMenu x:Key="taskbarContextMenu">
            <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=ShowSnooperText, Mode=OneWay}"
                              Command="{Binding Path=ActivationCommand, Mode=OneTime}">
                <MenuItem.Icon>
                    <Image Source="/Resources/tushome.png" Width="30" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=MessageLogsText, Mode=OneWay}"
                              Command="{Binding Path=MessageLogsCommand, Mode=OneTime}">
                <MenuItem.Icon>
                    <Image Source="/Resources/log.png" Width="30" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=SettingsText, Mode=OneWay}"
                              Command="{Binding Path=SettingsCommand, Mode=OneTime}">
                <MenuItem.Icon>
                    <Image Source="/Resources/settings.png" Width="30" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=LogOutText, Mode=OneWay}"
                              Command="{Binding Path=LogoutCommand, Mode=OneTime}">
                <MenuItem.Icon>
                    <Image Source="/Resources/logout.png" Width="30" />
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=ExitText, Mode=OneWay}"
                              Command="{Binding Path=CloseCommand, Mode=OneTime}">
                <MenuItem.Icon>
                    <Image Source="/Resources/close.png" Width="30" />
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>

        <Style TargetType="{x:Type controls:WindowCommands}">
            <Setter Property="Foreground"
                Value="{DynamicResource BlackBrush}" />
            <Setter Property="IsTabStop"
                Value="False" />
            <Setter Property="VerticalAlignment"
                Value="Center" />
            <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="controls:WindowCommands">
                        <ControlTemplate.Resources>
                            <ResourceDictionary>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Background"
                                        Value="{DynamicResource TransparentWhiteBrush}" />
                                    <Setter Property="HorizontalContentAlignment"
                                        Value="Center" />
                                    <Setter Property="VerticalContentAlignment"
                                        Value="Center" />
                                    <Setter Property="Padding"
                                        Value="1" />
                                    <Setter Property="Focusable"
                                        Value="False" />
                                    <Setter Property="FocusVisualStyle"
                                        Value="{x:Null}" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <ContentPresenter x:Name="contentPresenter"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  RecognizesAccessKey="True"
                                                                  Opacity="0.75"
                                                                  Margin="9,1,9,1" />

                                                    <Rectangle x:Name="border"
                                                           SnapsToDevicePixels="True"
                                                           IsHitTestVisible="False"
                                                           Opacity="0.25"
                                                           Width="1"
                                                           Height="15"
                                                           VerticalAlignment="Stretch"
                                                           HorizontalAlignment="Right"
                                                           Fill="{TemplateBinding Foreground}"
                                                           Margin="8,0,0,0" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver"
                                                         Value="True">
                                                        <Setter TargetName="contentPresenter"
                                                            Property="Opacity"
                                                            Value="1" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver"
                                                         Value="False">
                                                        <Setter TargetName="contentPresenter"
                                                            Property="Opacity"
                                                            Value=".75" />
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled"
                                                         Value="false">
                                                        <Setter Property="Foreground"
                                                            Value="#ADADAD" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ShowTitleBar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                                                 Value="True">
                                            <Setter Property="Foreground"
                                                Value="White" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ResourceDictionary>
                        </ControlTemplate.Resources>

                        <ItemsControl IsTabStop="False"
                                  Height="{Binding TitlebarHeight, RelativeSource={RelativeSource AncestorType=controls:MetroWindow}}"
                                  ItemsSource="{Binding Items, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:WindowCommands}}}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ShowTitleBar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                         Value="True">
                    <Setter Property="Foreground"
                        Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding ShowTitleBar, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:MetroWindow}}}"
                         Value="False">
                    <Setter Property="Background"
                        Value="Transparent" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <BitmapImage x:Key="gsLogo" UriSource="pack://application:,,,/Resources/icon.png" CacheOption="OnLoad" DecodePixelWidth="25" />
        <BitmapImage x:Key="batLogo" UriSource="pack://application:,,,/Resources/batlogo.ico" CacheOption="OnLoad" DecodePixelWidth="35" DecodePixelHeight="35" />
        <BitmapImage x:Key="awayOnImage" UriSource="pack://application:,,,/Resources/away.png" CacheOption="OnLoad" DecodePixelHeight="24" DecodePixelWidth="24" />
        <BitmapImage x:Key="awayOffImage" UriSource="pack://application:,,,/Resources/online.png" CacheOption="OnLoad" DecodePixelHeight="24" DecodePixelWidth="24" />
        <BitmapImage x:Key="chatModeOnImage" UriSource="pack://application:,,,/Resources/chatmodeon.png" CacheOption="OnLoad" DecodePixelHeight="24" DecodePixelWidth="24" />
        <BitmapImage x:Key="chatModeOffImage" UriSource="pack://application:,,,/Resources/chatmodeoff.png" CacheOption="OnLoad" DecodePixelHeight="24" DecodePixelWidth="24" />
        <BitmapImage x:Key="searchOnImage" UriSource="pack://application:,,,/Resources/searching.png" CacheOption="OnLoad" DecodePixelHeight="24" DecodePixelWidth="24" />
        <BitmapImage x:Key="searchOffImage" UriSource="pack://application:,,,/Resources/search.png" CacheOption="OnLoad" DecodePixelHeight="24" DecodePixelWidth="24" />
        <BitmapImage x:Key="notificatorOnImage" UriSource="pack://application:,,,/Resources/notificatoron.png" CacheOption="OnLoad" DecodePixelHeight="24" DecodePixelWidth="24" />
        <BitmapImage x:Key="notificatorOffImage" UriSource="pack://application:,,,/Resources/notificator.png" CacheOption="OnLoad" DecodePixelHeight="24" DecodePixelWidth="24" />
        <BitmapImage x:Key="soundOnImage" UriSource="pack://application:,,,/Resources/sound.png" CacheOption="OnLoad" DecodePixelHeight="24" DecodePixelWidth="24" />
        <BitmapImage x:Key="soundOffImage" UriSource="pack://application:,,,/Resources/soundoff.png" CacheOption="OnLoad" DecodePixelHeight="24" DecodePixelWidth="24" />

        <u:GSBalloon x:Key="gsBalloon" />
        <c:InvertBoolConverter x:Key="invertBoolConverter" />
        <c:InvertBoolToVisibilityConverter x:Key="invertBoolToVisibilityConverter" />
        <c:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
    </controls:MetroWindow.Resources>

    <!-- Shortcut keys -->
    <controls:MetroWindow.InputBindings>
        <KeyBinding Command="{Binding Path=NextChannelCommand, Mode=OneTime}" Key="Right" Modifiers="Alt" />
        <KeyBinding Command="{Binding Path=PrevChannelCommand, Mode=OneTime}" Key="Left" Modifiers="Alt" />
        <KeyBinding Command="{Binding Path=CloseActualChannelCommand, Mode=OneTime}" Key="W" Modifiers="Control" />
        <KeyBinding Command="{Binding Path=FilterCommand, Mode=OneTime}" Key="F" Modifiers="Control" />
        <KeyBinding Command="{Binding Path=AwayShortkeyCommand, Mode=OneTime}" Key="A" Modifiers="Control+Shift" />
        <KeyBinding Command="{Binding Path=ShowHistoryCommand, Mode=OneTime}" Key="H" Modifiers="Control" />
    </controls:MetroWindow.InputBindings>

    <!-- Application Icon -->
    <controls:MetroWindow.IconTemplate>
        <DataTemplate>
            <Image Source="/Resources/Icon.png" Margin="5" />
        </DataTemplate>
    </controls:MetroWindow.IconTemplate>

    <!-- Application Title -->
    <controls:MetroWindow.TitleTemplate>
        <DataTemplate></DataTemplate>
    </controls:MetroWindow.TitleTemplate>

    <!-- Left buttons in the header -->
    <controls:MetroWindow.LeftWindowCommands>
        <controls:WindowCommands>
            <Menu Height="40" Background="Transparent">
                <MenuItem Style="{StaticResource MenuItemStyle}">
                    <MenuItem.Icon>
                        <Image Margin="5,0,0,0">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=BatLogo, Mode=OneWay}" Value="False">
                                            <Setter Property="Source" Value="{StaticResource gsLogo}" />
                                            <Setter Property="Width" Value="25" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=BatLogo, Mode=OneWay}" Value="True">
                                            <Setter Property="Source" Value="{StaticResource batLogo}" />
                                            <Setter Property="Width" Value="35" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </MenuItem.Icon>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" FontSize="16" Margin="10,-2,0,0"
                                       Text="{Binding Path=WelcomeText, Mode=OneWay}"/>
                            <Image Source="/Resources/down.png" Width="25" Margin="3,0,5,0" />
                        </StackPanel>
                    </MenuItem.Header>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=IgnoreListTitle, Mode=OneWay}"
                              Command="{Binding Path=BanListCommand, Mode=OneTime}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/banned.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=MessageLogsText, Mode=OneWay}"
                              Command="{Binding Path=MessageLogsCommand, Mode=OneTime}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/log.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=ShowNewsText, Mode=OneWay}"
                              Command="{Binding Path=OpenNewsCommand, Mode=OneTime}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/newsIcon.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=SettingsText, Mode=OneWay}"
                              Command="{Binding Path=SettingsCommand, Mode=OneTime}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/settings.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=LogOutText, Mode=OneWay}"
                              Command="{Binding Path=LogoutCommand, Mode=OneTime}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/logout.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=ExitText, Mode=OneWay}"
                              Command="{Binding Path=CloseCommand, Mode=OneTime}">
                        <MenuItem.Icon>
                            <Image Source="/Resources/close.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>

            <Menu Height="40" Background="Transparent">
                <MenuItem Style="{StaticResource MenuItemStyle}">
                    <MenuItem.Icon>
                        <Image Source="/Resources/tuslogo.png" Width="35" Margin="8,0,0,0" />
                    </MenuItem.Icon>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image Source="/Resources/down.png" Width="25" Margin="3,0,5,0" />
                        </StackPanel>
                    </MenuItem.Header>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=TusHomePageText, Mode=OneWay}"
                              Command="{Binding Path=OpenLinkCommand, Mode=OneTime}"
                              CommandParameter="http://www.tus-wa.com">
                        <MenuItem.Icon>
                            <Image Source="/Resources/tushome.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=TusAnalyzerText, Mode=OneWay}"
                              Command="{Binding Path=OpenLinkCommand, Mode=OneTime}"
                              CommandParameter="http://www.tus-wa.com/leagues/analyzer/">
                        <MenuItem.Icon>
                            <Image Source="/Resources/tusanalizer.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=TusReportText, Mode=OneWay}"
                              Command="{Binding Path=OpenLinkCommand, Mode=OneTime}"
                              CommandParameter="http://www.tus-wa.com/leagues/report/">
                        <MenuItem.Icon>
                            <Image Source="/Resources/tusreport.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=TusComplaintsText, Mode=OneWay}"
                              Command="{Binding Path=OpenLinkCommand, Mode=OneTime}"
                              CommandParameter="http://www.tus-wa.com/forums/leagues-complaints/">
                        <MenuItem.Icon>
                            <Image Source="/Resources/tuscomplaints.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=TusRecentGamesText, Mode=OneWay}"
                              Command="{Binding Path=OpenLinkCommand, Mode=OneTime}"
                              CommandParameter="http://www.tus-wa.com/leagues/recent-games/">
                        <MenuItem.Icon>
                            <Image Source="/Resources/tusrecent.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=TusStandingsText, Mode=OneWay}"
                              Command="{Binding Path=OpenLinkCommand, Mode=OneTime}"
                              CommandParameter="http://www.tus-wa.com/leagues/classic-standings/">
                        <MenuItem.Icon>
                            <Image Source="/Resources/tusstandings.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=TusCupsText, Mode=OneWay}"
                              Command="{Binding Path=OpenLinkCommand, Mode=OneTime}"
                              CommandParameter="http://www.tus-wa.com/cups/">
                        <MenuItem.Icon>
                            <Image Source="/Resources/tuscup.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=TusTournamentsText, Mode=OneWay}"
                              Command="{Binding Path=OpenLinkCommand, Mode=OneTime}"
                              CommandParameter="http://www.tus-wa.com/tournaments/">
                        <MenuItem.Icon>
                            <Image Source="/Resources/tustournaments.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=TusPmsText, Mode=OneWay}"
                              Command="{Binding Path=OpenLinkCommand, Mode=OneTime}"
                              CommandParameter="http://www.tus-wa.com/pm/">
                        <MenuItem.Icon>
                            <Image Source="/Resources/tuspm.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=TusGSTopicText, Mode=OneWay}"
                              Command="{Binding Path=OpenLinkCommand, Mode=OneTime}"
                              CommandParameter="http://www.tus-wa.com/forums/files/great-snooper-3rd-chapter-25137/">
                        <MenuItem.Icon>
                            <Image Source="/Resources/gstopic.png" Width="30" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
            </Menu>
            
            <!-- Away / Online icon -->
            <Button ToolTip="{Binding Path=AwayTooltip, Mode=OneWay}"
                    ToolTipService.Placement="Bottom" Focusable="False"
                    Command="{Binding Path=AwayManagerCommand, Mode=OneTime}">
                <Image Width="24" Height="24">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsAway, Mode=OneWay}" Value="True">
                                    <Setter Property="Source" Value="{StaticResource awayOnImage}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsAway, Mode=OneWay}" Value="False">
                                    <Setter Property="Source" Value="{StaticResource awayOffImage}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <!-- Chat mode on / off icon -->
            <Button ToolTip="{Binding Source={x:Static l:GSLocalization.Instance}, Path=ChatModeTooltip, Mode=OneWay}"
                    ToolTipService.Placement="Bottom" Focusable="False"
                    Command="{Binding ChatModeCommand, Mode=OneTime}">
                <Image Width="24" Height="24">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=ChatModeEnabled, Mode=OneWay}" Value="True">
                                    <Setter Property="Source" Value="{StaticResource chatModeOnImage}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=ChatModeEnabled, Mode=OneWay}" Value="False">
                                    <Setter Property="Source" Value="{StaticResource chatModeOffImage}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <!-- League game searcher -->
            <Button ToolTip="{Binding Source={x:Static l:GSLocalization.Instance}, Path=LeagueSearcherTooltip, Mode=OneWay}"
                    ToolTipService.Placement="Bottom" Focusable="False"
                    Command="{Binding Path=LeagueSearcherCommand, Mode=OneTime}">
                <Image Width="24" Height="24">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=LeagueSearcher.IsEnabled, Mode=OneWay}" Value="True">
                                    <Setter Property="Source" Value="{StaticResource searchOnImage}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=LeagueSearcher.IsEnabled, Mode=OneWay}" Value="False">
                                    <Setter Property="Source" Value="{StaticResource searchOffImage}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <!-- Notificator -->
            <Button ToolTip="{Binding Source={x:Static l:GSLocalization.Instance}, Path=NotificatorTooltip, Mode=OneWay}"
                    ToolTipService.Placement="Bottom" Focusable="False"
                    Command="{Binding Path=NotificatorCommand, Mode=OneTime}">
                <Image Width="24" Height="24">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=NotificatorEnabled, Mode=OneWay}" Value="True">
                                    <Setter Property="Source" Value="{StaticResource notificatorOnImage}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=NotificatorEnabled, Mode=OneWay}" Value="False">
                                    <Setter Property="Source" Value="{StaticResource notificatorOffImage}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <!-- Sound on / off icon -->
            <Button ToolTip="{Binding Source={x:Static l:GSLocalization.Instance}, Path=MuteTooltip, Mode=OneWay}"
                    ToolTipService.Placement="Bottom" Focusable="False"
                    Command="{Binding Path=SoundCommand, Mode=OneTime}">
                <Image Width="24" Height="24">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=SoundMuted, Mode=OneWay}" Value="False">
                                    <Setter Property="Source" Value="{StaticResource soundOnImage}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=SoundMuted, Mode=OneWay}" Value="True">
                                    <Setter Property="Source" Value="{StaticResource soundOffImage}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>

            <!-- Volume -->
            <Border Height="40" ToolTipService.Placement="Bottom" Focusable="False"
                    ToolTip="{Binding Source={x:Static l:GSLocalization.Instance}, Path=VolumeTooltip, Mode=OneWay}">
                <ui:CustomSlider Value="{Binding Path=Volume, Mode=TwoWay}" VerticalAlignment="Center"
                                 IsDragging="{Binding Path=VolumeChanging, Mode=OneWayToSource}"
                                 Minimum="0" Maximum="100" SmallChange="1" LargeChange="10" Width="100" Focusable="False" />
            </Border>
            
            <!-- Start WA.exe -->
            <Button ToolTip="{Binding Source={x:Static l:GSLocalization.Instance}, Path=StartWAExeTooltip1, Mode=OneWay}"
                    ToolTipService.Placement="Bottom" Focusable="False"
                    Command="{Binding Path=StartWAExe1Command, Mode=OneTime}"
                    Visibility="{Binding Path=ShowWAExe1, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                <Image Width="24" Height="24" Source="/Resources/tuscup.png" />
            </Button>

            <!-- Start WA.exe -->
            <Button ToolTip="{Binding Source={x:Static l:GSLocalization.Instance}, Path=StartWAExeTooltip2, Mode=OneWay}"
                    ToolTipService.Placement="Bottom" Focusable="False"
                    Command="{Binding Path=StartWAExe2Command, Mode=OneTime}"
                    Visibility="{Binding Path=ShowWAExe2, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                <Image Width="24" Height="24" Source="/Resources/tuscup.png" />
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.LeftWindowCommands>

    <!-- Content -->
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Name="LeftColumn" Width="{Binding Path=LeftColumnWidth, Mode=OneTime}" MinWidth="100" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Name="RightColumn" Width="{Binding Path=RightColumnWidth, Mode=OneTime}" MinWidth="100" />
        </Grid.ColumnDefinitions>
        
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Name="TopRow" Height="{Binding Path=TopRowHeight, Mode=OneTime}" MinHeight="50" />
                <RowDefinition Height="Auto" />
                <RowDefinition Name="BottomRow" Height="{Binding Path=BottomRowHeight, Mode=OneTime}" MinHeight="50" />
            </Grid.RowDefinitions>

            <!-- Game list -->
            <TabControl Name="GameList" Grid.Row="0" Padding="0" BorderThickness="0"
                        SelectedIndex="{Binding Path=SelectedTabIndex2, Mode=OneWay}" />

            <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Focusable="False" ResizeBehavior="PreviousAndNext" Height="3" Background="Black">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DragCompleted">
                        <cmd:EventToCommand Command="{Binding RowsHeightChangedCommand, Mode=OneTime}" PassEventArgsToCommand="False" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </GridSplitter>


            <!-- The tabcontrol to list channels and messages -->
            <TabControl Name="ChannelsTabControl" Grid.Row="2" SelectedIndex="{Binding Path=SelectedChannelIndex, Mode=TwoWay}">
                <TabControl.Resources>
                    <Style TargetType="TabItem" x:Key="baseTabItem">
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="Padding" Value="6,2,6,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="MinWidth" Value="5" />
                        <Setter Property="MinHeight" Value="5" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="Foreground" Value="{DynamicResource GrayNormalBrush}" />
                        <Setter Property="FontWeight" Value="Normal" />
                    </Style>
                    
                    <Style TargetType="TabItem" BasedOn="{StaticResource baseTabItem}" x:Key="channelTabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border x:Name="Border" HorizontalAlignment="Stretch"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            Background="{TemplateBinding Background}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <ContentPresenter x:Name="ContentSite"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.FontSize="15"
                                              TextElement.FontStretch="{TemplateBinding controls:ControlsHelper.HeaderFontStretch}"
                                              TextElement.FontWeight="{TemplateBinding FontWeight}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                              Content="{Binding Path=Name, Mode=OneTime}"
                                              RecognizesAccessKey="True"
                                              DockPanel.Dock="Top"/>
                                        </DockPanel>
                                        <Border.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=HideChannelText, Mode=OneWay}"
                                                          Command="{Binding Path=MainViewModel.HideChannelCommand, Mode=OneTime}"
                                                          CommandParameter="{Binding}" />
                                            </ContextMenu>
                                        </Border.ContextMenu>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True" SourceName="ContentSite">
                                            <Setter Property="Foreground" Value="{DynamicResource GrayHoverBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding Path=IsHighlighted, Mode=OneWay}" Value="True">
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                    <Style TargetType="TabItem" BasedOn="{StaticResource baseTabItem}" x:Key="pmChannelTabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Border x:Name="Border" HorizontalAlignment="Stretch"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding Background}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <Border.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{Binding Source={x:Static l:GSLocalization.Instance}, Path=CloseChatText, Mode=OneWay}"
                                                          Command="{Binding Path=MainViewModel.CloseChannelCommand, Mode=OneTime}"
                                                          CommandParameter="{Binding}" />
                                            </ContextMenu>
                                        </Border.ContextMenu>
                                        <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                            <TextBlock x:Name="ContentSite"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.FontSize="15"
                                              TextElement.FontStretch="{TemplateBinding controls:ControlsHelper.HeaderFontStretch}"
                                              TextElement.FontWeight="{TemplateBinding controls:ControlsHelper.HeaderFontWeight}"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                                              DockPanel.Dock="Top"/>
                                        </DockPanel>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseDown">
                                                <cmd:EventToCommand Command="{Binding Path=CloseChannelMBCommand, Mode=OneTime}" PassEventArgsToCommand="True" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseEnter">
                                                <cmd:EventToCommand Command="{Binding Path=MouseEnteredHeaderCommand, Mode=OneTime}" PassEventArgsToCommand="False" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseLeave">
                                                <cmd:EventToCommand Command="{Binding Path=MouseLeftHeaderCommand, Mode=OneTime}" PassEventArgsToCommand="False" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
            </TabControl>
        </Grid>

        <GridSplitter Grid.Column="1" Background="Black" Width="4" Focusable="False" ResizeBehavior="PreviousAndNext">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="DragCompleted">
                    <cmd:EventToCommand Command="{Binding ColumnsWidthChangedCommand, Mode=OneTime}" PassEventArgsToCommand="False" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </GridSplitter>

        <!-- User list, filter, news -->
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="8" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!-- User list -->
            <TabControl Name="UserList" Grid.Row="0" Padding="0" BorderThickness="0" Margin="0"
                        SelectedIndex="{Binding Path=SelectedTabIndex2, Mode=OneWay}" />


            <!-- Filter -->
            <TextBox Grid.Row="2" Margin="0,0,5,7" Background="Transparent"
                     Text="{Binding Path=FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     ui:FocusExtension.IsFocused="{Binding Path=IsFilterFocused, Mode=OneWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotKeyboardFocus">
                        <cmd:EventToCommand Command="{Binding Path=FilterFocusCommand, Mode=OneTime}" PassEventArgsToCommand="False" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LostKeyboardFocus">
                        <cmd:EventToCommand Command="{Binding Path=FilterLeftCommand, Mode=OneTime}" PassEventArgsToCommand="False" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </Grid>
    </Grid>
</controls:MetroWindow>
